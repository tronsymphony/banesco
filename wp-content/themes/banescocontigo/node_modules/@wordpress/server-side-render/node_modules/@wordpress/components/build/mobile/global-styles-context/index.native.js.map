{"version":3,"sources":["@wordpress/components/src/mobile/global-styles-context/index.native.js"],"names":["GlobalStylesContext","style","BLOCK_STYLE_ATTRIBUTES","getMergedGlobalStyles","baseGlobalStyles","globalStyle","wrapperPropsStyle","blockAttributes","defaultColors","blockName","fontSizes","baseGlobalColors","baseColors","color","typography","elements","link","blocks","blockStyleAttributes","Object","fromEntries","entries","filter","key","includes","wrapperPropsStyleFiltered","mergedStyle","blockColors","blockPaddings","blockTypography","useGlobalStyles","globalStyles","withGlobalStyles","WrappedComponent","props"],"mappings":";;;;;;;;;AAGA;;;;AAKA;;AARA;AACA;AACA;;AAGA;AACA;AACA;AAQA,MAAMA,mBAAmB,GAAG,4BAAe;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAf,CAA5B;AAEAD,mBAAmB,CAACE,sBAApB,GAA6CA,6BAA7C;;AAEO,MAAMC,qBAAqB,GAAG,CACpCC,gBADoC,EAEpCC,WAFoC,EAGpCC,iBAHoC,EAIpCC,eAJoC,EAKpCC,aALoC,EAMpCC,SANoC,EAOpCC,SAPoC,KAQhC;AAAA;;AACJ;AACA,QAAMC,gBAAgB,GAAG;AACxBC,IAAAA,UAAU,EAAE;AACXC,MAAAA,KAAK,EAAET,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAES,KADd;AAEXC,MAAAA,UAAU,EAAEV,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAEU,UAFnB;AAGXC,MAAAA,QAAQ,EAAE;AACTC,QAAAA,IAAI,EAAEZ,gBAAF,aAAEA,gBAAF,gDAAEA,gBAAgB,CAAEW,QAApB,0DAAE,sBAA4BC;AADzB,OAHC;AAMXC,MAAAA,MAAM,EAAE;AACP,uBAAeb,gBAAf,aAAeA,gBAAf,gDAAeA,gBAAgB,CAAEa,MAAjC,0DAAe,sBAA4B,aAA5B;AADR;AANG;AADY,GAAzB;AAaA,QAAMC,oBAAoB,GAAGC,MAAM,CAACC,WAAP,CAC5BD,MAAM,CAACE,OAAP,CAAgBd,eAAhB,aAAgBA,eAAhB,cAAgBA,eAAhB,GAAmC,EAAnC,EAAwCe,MAAxC,CAAgD;AAAA,QAAE,CAAEC,GAAF,CAAF;AAAA,WAC/CrB,8BAAuBsB,QAAvB,CAAiCD,GAAjC,CAD+C;AAAA,GAAhD,CAD4B,CAA7B,CAfI,CAqBJ;AACA;;AACA,QAAME,yBAAyB,GAAGN,MAAM,CAACC,WAAP,CACjCD,MAAM,CAACE,OAAP,CAAgBf,iBAAhB,aAAgBA,iBAAhB,cAAgBA,iBAAhB,GAAqC,EAArC,EAA0CgB,MAA1C,CAAkD;AAAA,QAAE,CAAEC,GAAF,CAAF;AAAA,WACjDrB,8BAAuBsB,QAAvB,CAAiCD,GAAjC,CADiD;AAAA,GAAlD,CADiC,CAAlC;AAMA,QAAMG,WAAW,GAAG,EACnB,GAAGf,gBADgB;AAEnB,OAAGN,WAFgB;AAGnB,OAAGoB;AAHgB,GAApB;AAKA,QAAME,WAAW,GAAG,2BACnBT,oBADmB,EAEnBV,aAFmB,EAGnBC,SAHmB,EAInBL,gBAJmB,CAApB;AAMA,QAAMwB,aAAa,GAAG,6BACrBF,WADqB,EAErBpB,iBAFqB,EAGrBY,oBAHqB,EAIrBS,WAJqB,CAAtB;AAMA,QAAME,eAAe,GAAG,+BACvBX,oBADuB,EAEvBR,SAFuB,EAGvBD,SAHuB,EAIvBL,gBAJuB,CAAxB;AAOA,SAAO,EACN,GAAGsB,WADG;AAEN,OAAGE,aAFG;AAGN,OAAGD,WAHG;AAIN,OAAGE;AAJG,GAAP;AAMA,CAnEM;;;;AAqEA,MAAMC,eAAe,GAAG,MAAM;AACpC,QAAMC,YAAY,GAAG,yBAAY/B,mBAAZ,CAArB;AAEA,SAAO+B,YAAP;AACA,CAJM;;;;AAMA,MAAMC,gBAAgB,GAAKC,gBAAF,IAA0BC,KAAF,IAEtD,4BAAC,mBAAD,CAAqB,QAArB,QACKH,YAAF,IACD,4BAAC,gBAAD,6BAAuBG,KAAvB;AAA+B,EAAA,YAAY,EAAGH;AAA9C,GAFF,CAFK;;;eASQ/B,mB","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createContext, useContext } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport {\n\tBLOCK_STYLE_ATTRIBUTES,\n\tgetBlockPaddings,\n\tgetBlockColors,\n\tgetBlockTypography,\n} from './utils';\n\nconst GlobalStylesContext = createContext( { style: {} } );\n\nGlobalStylesContext.BLOCK_STYLE_ATTRIBUTES = BLOCK_STYLE_ATTRIBUTES;\n\nexport const getMergedGlobalStyles = (\n\tbaseGlobalStyles,\n\tglobalStyle,\n\twrapperPropsStyle,\n\tblockAttributes,\n\tdefaultColors,\n\tblockName,\n\tfontSizes\n) => {\n\t// Current support for general styles and blocks.\n\tconst baseGlobalColors = {\n\t\tbaseColors: {\n\t\t\tcolor: baseGlobalStyles?.color,\n\t\t\ttypography: baseGlobalStyles?.typography,\n\t\t\telements: {\n\t\t\t\tlink: baseGlobalStyles?.elements?.link,\n\t\t\t},\n\t\t\tblocks: {\n\t\t\t\t'core/button': baseGlobalStyles?.blocks?.[ 'core/button' ],\n\t\t\t},\n\t\t},\n\t};\n\n\tconst blockStyleAttributes = Object.fromEntries(\n\t\tObject.entries( blockAttributes ?? {} ).filter( ( [ key ] ) =>\n\t\t\tBLOCK_STYLE_ATTRIBUTES.includes( key )\n\t\t)\n\t);\n\n\t// This prevents certain wrapper styles from being applied to blocks that\n\t// don't support them yet.\n\tconst wrapperPropsStyleFiltered = Object.fromEntries(\n\t\tObject.entries( wrapperPropsStyle ?? {} ).filter( ( [ key ] ) =>\n\t\t\tBLOCK_STYLE_ATTRIBUTES.includes( key )\n\t\t)\n\t);\n\n\tconst mergedStyle = {\n\t\t...baseGlobalColors,\n\t\t...globalStyle,\n\t\t...wrapperPropsStyleFiltered,\n\t};\n\tconst blockColors = getBlockColors(\n\t\tblockStyleAttributes,\n\t\tdefaultColors,\n\t\tblockName,\n\t\tbaseGlobalStyles\n\t);\n\tconst blockPaddings = getBlockPaddings(\n\t\tmergedStyle,\n\t\twrapperPropsStyle,\n\t\tblockStyleAttributes,\n\t\tblockColors\n\t);\n\tconst blockTypography = getBlockTypography(\n\t\tblockStyleAttributes,\n\t\tfontSizes,\n\t\tblockName,\n\t\tbaseGlobalStyles\n\t);\n\n\treturn {\n\t\t...mergedStyle,\n\t\t...blockPaddings,\n\t\t...blockColors,\n\t\t...blockTypography,\n\t};\n};\n\nexport const useGlobalStyles = () => {\n\tconst globalStyles = useContext( GlobalStylesContext );\n\n\treturn globalStyles;\n};\n\nexport const withGlobalStyles = ( WrappedComponent ) => ( props ) =>\n\t(\n\t\t<GlobalStylesContext.Consumer>\n\t\t\t{ ( globalStyles ) => (\n\t\t\t\t<WrappedComponent { ...props } globalStyles={ globalStyles } />\n\t\t\t) }\n\t\t</GlobalStylesContext.Consumer>\n\t);\n\nexport default GlobalStylesContext;\n"]}