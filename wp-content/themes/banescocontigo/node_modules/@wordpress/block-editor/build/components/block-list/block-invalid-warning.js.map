{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/block-invalid-warning.js"],"names":["blockToBlocks","block","HTML","originalContent","BlockInvalidWarning","clientId","canInsertHTMLBlock","canInsertClassicBlock","select","canInsertBlockType","getBlock","getBlockRootClientId","blockEditorStore","rootClientId","replaceBlock","compare","setCompare","onCompareClose","convert","toClassic","classicBlock","content","toHTML","htmlBlock","toBlocks","newBlocks","toRecoveredBlock","recoveredBlock","name","attributes","innerBlocks","secondaryActions","title","onClick","filter","Boolean"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport { Button, Modal } from '@wordpress/components';\nimport { useState, useCallback, useMemo } from '@wordpress/element';\nimport { createBlock, rawHandler } from '@wordpress/blocks';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport Warning from '../warning';\nimport BlockCompare from '../block-compare';\nimport { store as blockEditorStore } from '../../store';\n\nconst blockToBlocks = ( block ) =>\n\trawHandler( {\n\t\tHTML: block.originalContent,\n\t} );\n\nexport default function BlockInvalidWarning( { clientId } ) {\n\tconst { block, canInsertHTMLBlock, canInsertClassicBlock } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { canInsertBlockType, getBlock, getBlockRootClientId } =\n\t\t\t\tselect( blockEditorStore );\n\n\t\t\tconst rootClientId = getBlockRootClientId( clientId );\n\n\t\t\treturn {\n\t\t\t\tblock: getBlock( clientId ),\n\t\t\t\tcanInsertHTMLBlock: canInsertBlockType(\n\t\t\t\t\t'core/html',\n\t\t\t\t\trootClientId\n\t\t\t\t),\n\t\t\t\tcanInsertClassicBlock: canInsertBlockType(\n\t\t\t\t\t'core/freeform',\n\t\t\t\t\trootClientId\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\tconst { replaceBlock } = useDispatch( blockEditorStore );\n\n\tconst [ compare, setCompare ] = useState( false );\n\tconst onCompareClose = useCallback( () => setCompare( false ), [] );\n\n\tconst convert = useMemo(\n\t\t() => ( {\n\t\t\ttoClassic() {\n\t\t\t\tconst classicBlock = createBlock( 'core/freeform', {\n\t\t\t\t\tcontent: block.originalContent,\n\t\t\t\t} );\n\t\t\t\treturn replaceBlock( block.clientId, classicBlock );\n\t\t\t},\n\t\t\ttoHTML() {\n\t\t\t\tconst htmlBlock = createBlock( 'core/html', {\n\t\t\t\t\tcontent: block.originalContent,\n\t\t\t\t} );\n\t\t\t\treturn replaceBlock( block.clientId, htmlBlock );\n\t\t\t},\n\t\t\ttoBlocks() {\n\t\t\t\tconst newBlocks = blockToBlocks( block );\n\t\t\t\treturn replaceBlock( block.clientId, newBlocks );\n\t\t\t},\n\t\t\ttoRecoveredBlock() {\n\t\t\t\tconst recoveredBlock = createBlock(\n\t\t\t\t\tblock.name,\n\t\t\t\t\tblock.attributes,\n\t\t\t\t\tblock.innerBlocks\n\t\t\t\t);\n\t\t\t\treturn replaceBlock( block.clientId, recoveredBlock );\n\t\t\t},\n\t\t} ),\n\t\t[ block, replaceBlock ]\n\t);\n\n\tconst secondaryActions = useMemo(\n\t\t() =>\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t// translators: Button to fix block content\n\t\t\t\t\ttitle: _x( 'Resolve', 'imperative verb' ),\n\t\t\t\t\tonClick: () => setCompare( true ),\n\t\t\t\t},\n\t\t\t\tcanInsertHTMLBlock && {\n\t\t\t\t\ttitle: __( 'Convert to HTML' ),\n\t\t\t\t\tonClick: convert.toHTML,\n\t\t\t\t},\n\t\t\t\tcanInsertClassicBlock && {\n\t\t\t\t\ttitle: __( 'Convert to Classic Block' ),\n\t\t\t\t\tonClick: convert.toClassic,\n\t\t\t\t},\n\t\t\t].filter( Boolean ),\n\t\t[ canInsertHTMLBlock, canInsertClassicBlock, convert ]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Warning\n\t\t\t\tactions={ [\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkey=\"recover\"\n\t\t\t\t\t\tonClick={ convert.toRecoveredBlock }\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Attempt Block Recovery' ) }\n\t\t\t\t\t</Button>,\n\t\t\t\t] }\n\t\t\t\tsecondaryActions={ secondaryActions }\n\t\t\t>\n\t\t\t\t{ __( 'This block contains unexpected or invalid content.' ) }\n\t\t\t</Warning>\n\t\t\t{ compare && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={\n\t\t\t\t\t\t// translators: Dialog title to fix block content\n\t\t\t\t\t\t__( 'Resolve Block' )\n\t\t\t\t\t}\n\t\t\t\t\tonRequestClose={ onCompareClose }\n\t\t\t\t\tclassName=\"block-editor-block-compare\"\n\t\t\t\t>\n\t\t\t\t\t<BlockCompare\n\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\tonKeep={ convert.toHTML }\n\t\t\t\t\t\tonConvert={ convert.toBlocks }\n\t\t\t\t\t\tconvertor={ blockToBlocks }\n\t\t\t\t\t\tconvertButtonText={ __( 'Convert to Blocks' ) }\n\t\t\t\t\t/>\n\t\t\t\t</Modal>\n\t\t\t) }\n\t\t</>\n\t);\n}\n"]}