{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/block-invalid-warning.js"],"names":["__","_x","Button","Modal","useState","useCallback","useMemo","createBlock","rawHandler","useDispatch","useSelect","Warning","BlockCompare","store","blockEditorStore","blockToBlocks","block","HTML","originalContent","BlockInvalidWarning","clientId","canInsertHTMLBlock","canInsertClassicBlock","select","canInsertBlockType","getBlock","getBlockRootClientId","rootClientId","replaceBlock","compare","setCompare","onCompareClose","convert","toClassic","classicBlock","content","toHTML","htmlBlock","toBlocks","newBlocks","toRecoveredBlock","recoveredBlock","name","attributes","innerBlocks","secondaryActions","title","onClick","filter","Boolean"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport { Button, Modal } from '@wordpress/components';\nimport { useState, useCallback, useMemo } from '@wordpress/element';\nimport { createBlock, rawHandler } from '@wordpress/blocks';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport Warning from '../warning';\nimport BlockCompare from '../block-compare';\nimport { store as blockEditorStore } from '../../store';\n\nconst blockToBlocks = ( block ) =>\n\trawHandler( {\n\t\tHTML: block.originalContent,\n\t} );\n\nexport default function BlockInvalidWarning( { clientId } ) {\n\tconst { block, canInsertHTMLBlock, canInsertClassicBlock } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { canInsertBlockType, getBlock, getBlockRootClientId } =\n\t\t\t\tselect( blockEditorStore );\n\n\t\t\tconst rootClientId = getBlockRootClientId( clientId );\n\n\t\t\treturn {\n\t\t\t\tblock: getBlock( clientId ),\n\t\t\t\tcanInsertHTMLBlock: canInsertBlockType(\n\t\t\t\t\t'core/html',\n\t\t\t\t\trootClientId\n\t\t\t\t),\n\t\t\t\tcanInsertClassicBlock: canInsertBlockType(\n\t\t\t\t\t'core/freeform',\n\t\t\t\t\trootClientId\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\tconst { replaceBlock } = useDispatch( blockEditorStore );\n\n\tconst [ compare, setCompare ] = useState( false );\n\tconst onCompareClose = useCallback( () => setCompare( false ), [] );\n\n\tconst convert = useMemo(\n\t\t() => ( {\n\t\t\ttoClassic() {\n\t\t\t\tconst classicBlock = createBlock( 'core/freeform', {\n\t\t\t\t\tcontent: block.originalContent,\n\t\t\t\t} );\n\t\t\t\treturn replaceBlock( block.clientId, classicBlock );\n\t\t\t},\n\t\t\ttoHTML() {\n\t\t\t\tconst htmlBlock = createBlock( 'core/html', {\n\t\t\t\t\tcontent: block.originalContent,\n\t\t\t\t} );\n\t\t\t\treturn replaceBlock( block.clientId, htmlBlock );\n\t\t\t},\n\t\t\ttoBlocks() {\n\t\t\t\tconst newBlocks = blockToBlocks( block );\n\t\t\t\treturn replaceBlock( block.clientId, newBlocks );\n\t\t\t},\n\t\t\ttoRecoveredBlock() {\n\t\t\t\tconst recoveredBlock = createBlock(\n\t\t\t\t\tblock.name,\n\t\t\t\t\tblock.attributes,\n\t\t\t\t\tblock.innerBlocks\n\t\t\t\t);\n\t\t\t\treturn replaceBlock( block.clientId, recoveredBlock );\n\t\t\t},\n\t\t} ),\n\t\t[ block, replaceBlock ]\n\t);\n\n\tconst secondaryActions = useMemo(\n\t\t() =>\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t// translators: Button to fix block content\n\t\t\t\t\ttitle: _x( 'Resolve', 'imperative verb' ),\n\t\t\t\t\tonClick: () => setCompare( true ),\n\t\t\t\t},\n\t\t\t\tcanInsertHTMLBlock && {\n\t\t\t\t\ttitle: __( 'Convert to HTML' ),\n\t\t\t\t\tonClick: convert.toHTML,\n\t\t\t\t},\n\t\t\t\tcanInsertClassicBlock && {\n\t\t\t\t\ttitle: __( 'Convert to Classic Block' ),\n\t\t\t\t\tonClick: convert.toClassic,\n\t\t\t\t},\n\t\t\t].filter( Boolean ),\n\t\t[ canInsertHTMLBlock, canInsertClassicBlock, convert ]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Warning\n\t\t\t\tactions={ [\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkey=\"recover\"\n\t\t\t\t\t\tonClick={ convert.toRecoveredBlock }\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Attempt Block Recovery' ) }\n\t\t\t\t\t</Button>,\n\t\t\t\t] }\n\t\t\t\tsecondaryActions={ secondaryActions }\n\t\t\t>\n\t\t\t\t{ __( 'This block contains unexpected or invalid content.' ) }\n\t\t\t</Warning>\n\t\t\t{ compare && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={\n\t\t\t\t\t\t// translators: Dialog title to fix block content\n\t\t\t\t\t\t__( 'Resolve Block' )\n\t\t\t\t\t}\n\t\t\t\t\tonRequestClose={ onCompareClose }\n\t\t\t\t\tclassName=\"block-editor-block-compare\"\n\t\t\t\t>\n\t\t\t\t\t<BlockCompare\n\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\tonKeep={ convert.toHTML }\n\t\t\t\t\t\tonConvert={ convert.toBlocks }\n\t\t\t\t\t\tconvertor={ blockToBlocks }\n\t\t\t\t\t\tconvertButtonText={ __( 'Convert to Blocks' ) }\n\t\t\t\t\t/>\n\t\t\t\t</Modal>\n\t\t\t) }\n\t\t</>\n\t);\n}\n"]}