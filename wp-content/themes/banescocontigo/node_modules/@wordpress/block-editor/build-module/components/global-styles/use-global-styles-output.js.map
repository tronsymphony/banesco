{"version":3,"sources":["@wordpress/block-editor/src/components/global-styles/use-global-styles-output.js"],"names":["get","isEmpty","kebabCase","set","__EXPERIMENTAL_STYLE_PROPERTY","STYLE_PROPERTY","__EXPERIMENTAL_ELEMENTS","ELEMENTS","getBlockSupport","getBlockTypes","store","blocksStore","useSelect","renderToString","useContext","useMemo","getCSSRules","PRESET_METADATA","ROOT_BLOCK_SELECTOR","scopeSelector","getBlockCSSSelector","getTypographyFontSizeValue","GlobalStylesContext","useGlobalSetting","PresetDuotoneFilter","getGapCSSValue","blockEditorStore","BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS","__experimentalBorder","color","spacing","typography","compileStyleValue","uncompiledValue","VARIABLE_REFERENCE_PREFIX","VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE","VARIABLE_PATH_SEPARATOR_TOKEN_STYLE","startsWith","variable","slice","length","split","join","getPresetsDeclarations","blockPresets","mergedSettings","reduce","declarations","path","valueKey","valueFunc","cssVarInfix","presetByOrigin","forEach","origin","value","push","slug","getPresetsClasses","blockSelector","classes","classSuffix","propertyName","classSelectorToUse","selectorToUse","map","selector","getPresetsSvgFilters","filter","metadata","at","flatMap","preset","flattenTree","input","prefix","token","result","Object","keys","key","newKey","replace","newLeaf","newPrefix","concatFeatureVariationSelectorString","featureSelector","styleVariationSelector","featureSelectors","combinedSelectors","trim","getFeatureDeclarations","selectors","styles","entries","feature","isShorthand","subfeature","subfeatureSelector","subfeatureStyles","newDeclarations","getStylesDeclarations","root","featureStyles","blockStyles","useRootPaddingAlign","tree","isRoot","output","properties","useEngine","rootOnly","pathToValue","styleValue","entry","name","prop","cssProperty","extraRules","rule","ruleValue","ref","refPath","size","settings","getLayoutStyles","style","hasBlockGapSupport","hasFallbackGapSupport","fallbackGapValue","ruleset","gapValue","blockGap","layout","definitions","values","className","spacingStyles","spacingStyle","rules","cssValue","combinedSelector","validDisplayModes","displayMode","baseStyles","includes","baseStyle","getNodesWithStyles","blockSelectors","nodes","pickStyleKeys","treeToPickFrom","fromEntries","elements","blocks","blockName","node","variations","variation","duotoneSelector","hasLayoutSupport","styleVariationSelectors","elementName","sel","elementSelectors","elementSelector","getNodesWithSettings","pickPresets","presets","custom","blockCustom","toCustomProperties","customProps","toStyles","disableLayoutStyles","nodesWithStyles","nodesWithSettings","useRootPaddingAwareAlignments","contentSize","wideSize","featureDeclarations","cssSelector","styleVariationName","baseSelector","styleVariationDeclarations","duotoneStyles","duotoneDeclarations","pseudoSelectorStyles","pseudoKey","pseudoStyle","pseudoDeclarations","_selector","pseudoRule","toSvgFilters","getSelectorsConfig","blockType","rootSelector","config","featureKey","featureName","getBlockSelectors","blockTypes","getBlockStyles","duotoneSupport","supports","__experimentalLayout","__experimentalDefault","blockStyleVariations","undefined","updateConfigWithSeparator","needsSeparatorStyleUpdate","background","text","border","processCSSNesting","css","processedCSS","parts","part","useGlobalStylesOutput","merged","mergedConfig","select","getSettings","customProperties","globalStyles","svgs","isGlobalStyles","assets","__unstableType"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { get, isEmpty, kebabCase, set } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {\n\t__EXPERIMENTAL_STYLE_PROPERTY as STYLE_PROPERTY,\n\t__EXPERIMENTAL_ELEMENTS as ELEMENTS,\n\tgetBlockSupport,\n\tgetBlockTypes,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport { renderToString, useContext, useMemo } from '@wordpress/element';\nimport { getCSSRules } from '@wordpress/style-engine';\n\n/**\n * Internal dependencies\n */\nimport { PRESET_METADATA, ROOT_BLOCK_SELECTOR, scopeSelector } from './utils';\nimport { getBlockCSSSelector } from './get-block-css-selector';\nimport { getTypographyFontSizeValue } from './typography-utils';\nimport { GlobalStylesContext } from './context';\nimport { useGlobalSetting } from './hooks';\nimport { PresetDuotoneFilter } from '../duotone/components';\nimport { getGapCSSValue } from '../../hooks/gap';\nimport { store as blockEditorStore } from '../../store';\n\n// List of block support features that can have their related styles\n// generated under their own feature level selector rather than the block's.\nconst BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS = {\n\t__experimentalBorder: 'border',\n\tcolor: 'color',\n\tspacing: 'spacing',\n\ttypography: 'typography',\n};\n\nfunction compileStyleValue( uncompiledValue ) {\n\tconst VARIABLE_REFERENCE_PREFIX = 'var:';\n\tconst VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE = '|';\n\tconst VARIABLE_PATH_SEPARATOR_TOKEN_STYLE = '--';\n\n\tif ( uncompiledValue?.startsWith?.( VARIABLE_REFERENCE_PREFIX ) ) {\n\t\tconst variable = uncompiledValue\n\t\t\t.slice( VARIABLE_REFERENCE_PREFIX.length )\n\t\t\t.split( VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE )\n\t\t\t.join( VARIABLE_PATH_SEPARATOR_TOKEN_STYLE );\n\t\treturn `var(--wp--${ variable })`;\n\t}\n\treturn uncompiledValue;\n}\n\n/**\n * Transform given preset tree into a set of style declarations.\n *\n * @param {Object} blockPresets\n * @param {Object} mergedSettings Merged theme.json settings.\n *\n * @return {Array<Object>} An array of style declarations.\n */\nfunction getPresetsDeclarations( blockPresets = {}, mergedSettings ) {\n\treturn PRESET_METADATA.reduce(\n\t\t( declarations, { path, valueKey, valueFunc, cssVarInfix } ) => {\n\t\t\tconst presetByOrigin = get( blockPresets, path, [] );\n\t\t\t[ 'default', 'theme', 'custom' ].forEach( ( origin ) => {\n\t\t\t\tif ( presetByOrigin[ origin ] ) {\n\t\t\t\t\tpresetByOrigin[ origin ].forEach( ( value ) => {\n\t\t\t\t\t\tif ( valueKey && ! valueFunc ) {\n\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t`--wp--preset--${ cssVarInfix }--${ kebabCase(\n\t\t\t\t\t\t\t\t\tvalue.slug\n\t\t\t\t\t\t\t\t) }: ${ value[ valueKey ] }`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tvalueFunc &&\n\t\t\t\t\t\t\ttypeof valueFunc === 'function'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t`--wp--preset--${ cssVarInfix }--${ kebabCase(\n\t\t\t\t\t\t\t\t\tvalue.slug\n\t\t\t\t\t\t\t\t) }: ${ valueFunc( value, mergedSettings ) }`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn declarations;\n\t\t},\n\t\t[]\n\t);\n}\n\n/**\n * Transform given preset tree into a set of preset class declarations.\n *\n * @param {?string} blockSelector\n * @param {Object}  blockPresets\n * @return {string} CSS declarations for the preset classes.\n */\nfunction getPresetsClasses( blockSelector = '*', blockPresets = {} ) {\n\treturn PRESET_METADATA.reduce(\n\t\t( declarations, { path, cssVarInfix, classes } ) => {\n\t\t\tif ( ! classes ) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\n\t\t\tconst presetByOrigin = get( blockPresets, path, [] );\n\t\t\t[ 'default', 'theme', 'custom' ].forEach( ( origin ) => {\n\t\t\t\tif ( presetByOrigin[ origin ] ) {\n\t\t\t\t\tpresetByOrigin[ origin ].forEach( ( { slug } ) => {\n\t\t\t\t\t\tclasses.forEach( ( { classSuffix, propertyName } ) => {\n\t\t\t\t\t\t\tconst classSelectorToUse = `.has-${ kebabCase(\n\t\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\t) }-${ classSuffix }`;\n\t\t\t\t\t\t\tconst selectorToUse = blockSelector\n\t\t\t\t\t\t\t\t.split( ',' ) // Selector can be \"h1, h2, h3\"\n\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t( selector ) =>\n\t\t\t\t\t\t\t\t\t\t`${ selector }${ classSelectorToUse }`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.join( ',' );\n\t\t\t\t\t\t\tconst value = `var(--wp--preset--${ cssVarInfix }--${ kebabCase(\n\t\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\t) })`;\n\t\t\t\t\t\t\tdeclarations += `${ selectorToUse }{${ propertyName }: ${ value } !important;}`;\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn declarations;\n\t\t},\n\t\t''\n\t);\n}\n\nfunction getPresetsSvgFilters( blockPresets = {} ) {\n\treturn PRESET_METADATA.filter(\n\t\t// Duotone are the only type of filters for now.\n\t\t( metadata ) => metadata.path.at( -1 ) === 'duotone'\n\t).flatMap( ( metadata ) => {\n\t\tconst presetByOrigin = get( blockPresets, metadata.path, {} );\n\t\treturn [ 'default', 'theme' ]\n\t\t\t.filter( ( origin ) => presetByOrigin[ origin ] )\n\t\t\t.flatMap( ( origin ) =>\n\t\t\t\tpresetByOrigin[ origin ].map( ( preset ) =>\n\t\t\t\t\trenderToString(\n\t\t\t\t\t\t<PresetDuotoneFilter\n\t\t\t\t\t\t\tpreset={ preset }\n\t\t\t\t\t\t\tkey={ preset.slug }\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t\t.join( '' );\n\t} );\n}\n\nfunction flattenTree( input = {}, prefix, token ) {\n\tlet result = [];\n\tObject.keys( input ).forEach( ( key ) => {\n\t\tconst newKey = prefix + kebabCase( key.replace( '/', '-' ) );\n\t\tconst newLeaf = input[ key ];\n\n\t\tif ( newLeaf instanceof Object ) {\n\t\t\tconst newPrefix = newKey + token;\n\t\t\tresult = [ ...result, ...flattenTree( newLeaf, newPrefix, token ) ];\n\t\t} else {\n\t\t\tresult.push( `${ newKey }: ${ newLeaf }` );\n\t\t}\n\t} );\n\treturn result;\n}\n\n/**\n * Gets variation selector string from feature selector.\n *\n * @param {string} featureSelector        The feature selector.\n *\n * @param {string} styleVariationSelector The style variation selector.\n * @return {string} Combined selector string.\n *\n */\nfunction concatFeatureVariationSelectorString(\n\tfeatureSelector,\n\tstyleVariationSelector\n) {\n\tconst featureSelectors = featureSelector.split( ',' );\n\tconst combinedSelectors = [];\n\tfeatureSelectors.forEach( ( selector ) => {\n\t\tcombinedSelectors.push(\n\t\t\t`${ styleVariationSelector.trim() }${ selector.trim() }`\n\t\t);\n\t} );\n\treturn combinedSelectors.join( ', ' );\n}\n\n/**\n * Generate style declarations for a block's custom feature and subfeature\n * selectors.\n *\n * NOTE: The passed `styles` object will be mutated by this function.\n *\n * @param {Object} selectors Custom selectors object for a block.\n * @param {Object} styles    A block's styles object.\n *\n * @return {Object} Style declarations.\n */\nconst getFeatureDeclarations = ( selectors, styles ) => {\n\tconst declarations = {};\n\n\tObject.entries( selectors ).forEach( ( [ feature, selector ] ) => {\n\t\t// We're only processing features/subfeatures that have styles.\n\t\tif ( feature === 'root' || ! styles?.[ feature ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isShorthand = typeof selector === 'string';\n\n\t\t// If we have a selector object instead of shorthand process it.\n\t\tif ( ! isShorthand ) {\n\t\t\tObject.entries( selector ).forEach(\n\t\t\t\t( [ subfeature, subfeatureSelector ] ) => {\n\t\t\t\t\t// Don't process root feature selector yet or any\n\t\t\t\t\t// subfeature that doesn't have a style.\n\t\t\t\t\tif (\n\t\t\t\t\t\tsubfeature === 'root' ||\n\t\t\t\t\t\t! styles?.[ feature ][ subfeature ]\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create a temporary styles object and build\n\t\t\t\t\t// declarations for subfeature.\n\t\t\t\t\tconst subfeatureStyles = {\n\t\t\t\t\t\t[ feature ]: {\n\t\t\t\t\t\t\t[ subfeature ]: styles[ feature ][ subfeature ],\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t\tconst newDeclarations =\n\t\t\t\t\t\tgetStylesDeclarations( subfeatureStyles );\n\n\t\t\t\t\t// Merge new declarations in with any others that\n\t\t\t\t\t// share the same selector.\n\t\t\t\t\tdeclarations[ subfeatureSelector ] = [\n\t\t\t\t\t\t...( declarations[ subfeatureSelector ] || [] ),\n\t\t\t\t\t\t...newDeclarations,\n\t\t\t\t\t];\n\n\t\t\t\t\t// Remove the subfeature's style now it will be\n\t\t\t\t\t// included under its own selector not the block's.\n\t\t\t\t\tdelete styles[ feature ][ subfeature ];\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\t// Now subfeatures have been processed and removed, we can\n\t\t// process root, or shorthand, feature selectors.\n\t\tif ( isShorthand || selector.root ) {\n\t\t\tconst featureSelector = isShorthand ? selector : selector.root;\n\n\t\t\t// Create temporary style object and build declarations for feature.\n\t\t\tconst featureStyles = { [ feature ]: styles[ feature ] };\n\t\t\tconst newDeclarations = getStylesDeclarations( featureStyles );\n\n\t\t\t// Merge new declarations with any others that share the selector.\n\t\t\tdeclarations[ featureSelector ] = [\n\t\t\t\t...( declarations[ featureSelector ] || [] ),\n\t\t\t\t...newDeclarations,\n\t\t\t];\n\n\t\t\t// Remove the feature from the block's styles now as it will be\n\t\t\t// included under its own selector not the block's.\n\t\t\tdelete styles[ feature ];\n\t\t}\n\t} );\n\n\treturn declarations;\n};\n\n/**\n * Transform given style tree into a set of style declarations.\n *\n * @param {Object}  blockStyles         Block styles.\n *\n * @param {string}  selector            The selector these declarations should attach to.\n *\n * @param {boolean} useRootPaddingAlign Whether to use CSS custom properties in root selector.\n *\n * @param {Object}  tree                A theme.json tree containing layout definitions.\n *\n * @return {Array} An array of style declarations.\n */\nexport function getStylesDeclarations(\n\tblockStyles = {},\n\tselector = '',\n\tuseRootPaddingAlign,\n\ttree = {}\n) {\n\tconst isRoot = ROOT_BLOCK_SELECTOR === selector;\n\tconst output = Object.entries( STYLE_PROPERTY ).reduce(\n\t\t(\n\t\t\tdeclarations,\n\t\t\t[ key, { value, properties, useEngine, rootOnly } ]\n\t\t) => {\n\t\t\tif ( rootOnly && ! isRoot ) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\t\t\tconst pathToValue = value;\n\t\t\tif ( pathToValue[ 0 ] === 'elements' || useEngine ) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\n\t\t\tconst styleValue = get( blockStyles, pathToValue );\n\n\t\t\t// Root-level padding styles don't currently support strings with CSS shorthand values.\n\t\t\t// This may change: https://github.com/WordPress/gutenberg/issues/40132.\n\t\t\tif (\n\t\t\t\tkey === '--wp--style--root--padding' &&\n\t\t\t\t( typeof styleValue === 'string' || ! useRootPaddingAlign )\n\t\t\t) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\n\t\t\tif ( !! properties && typeof styleValue !== 'string' ) {\n\t\t\t\tObject.entries( properties ).forEach( ( entry ) => {\n\t\t\t\t\tconst [ name, prop ] = entry;\n\n\t\t\t\t\tif ( ! get( styleValue, [ prop ], false ) ) {\n\t\t\t\t\t\t// Do not create a declaration\n\t\t\t\t\t\t// for sub-properties that don't have any value.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cssProperty = name.startsWith( '--' )\n\t\t\t\t\t\t? name\n\t\t\t\t\t\t: kebabCase( name );\n\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t`${ cssProperty }: ${ compileStyleValue(\n\t\t\t\t\t\t\tget( styleValue, [ prop ] )\n\t\t\t\t\t\t) }`\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t} else if ( get( blockStyles, pathToValue, false ) ) {\n\t\t\t\tconst cssProperty = key.startsWith( '--' )\n\t\t\t\t\t? key\n\t\t\t\t\t: kebabCase( key );\n\t\t\t\tdeclarations.push(\n\t\t\t\t\t`${ cssProperty }: ${ compileStyleValue(\n\t\t\t\t\t\tget( blockStyles, pathToValue )\n\t\t\t\t\t) }`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn declarations;\n\t\t},\n\t\t[]\n\t);\n\n\t// The goal is to move everything to server side generated engine styles\n\t// This is temporary as we absorb more and more styles into the engine.\n\tconst extraRules = getCSSRules( blockStyles );\n\textraRules.forEach( ( rule ) => {\n\t\t// Don't output padding properties if padding variables are set.\n\t\tif (\n\t\t\tisRoot &&\n\t\t\tuseRootPaddingAlign &&\n\t\t\trule.key.startsWith( 'padding' )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconst cssProperty = rule.key.startsWith( '--' )\n\t\t\t? rule.key\n\t\t\t: kebabCase( rule.key );\n\n\t\tlet ruleValue = rule.value;\n\t\tif ( typeof ruleValue !== 'string' && ruleValue?.ref ) {\n\t\t\tconst refPath = ruleValue.ref.split( '.' );\n\t\t\truleValue = get( tree, refPath );\n\t\t\t// Presence of another ref indicates a reference to another dynamic value.\n\t\t\t// Pointing to another dynamic value is not supported.\n\t\t\tif ( ! ruleValue || !! ruleValue?.ref ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Calculate fluid typography rules where available.\n\t\tif ( cssProperty === 'font-size' ) {\n\t\t\t/*\n\t\t\t * getTypographyFontSizeValue() will check\n\t\t\t * if fluid typography has been activated and also\n\t\t\t * whether the incoming value can be converted to a fluid value.\n\t\t\t * Values that already have a \"clamp()\" function will not pass the test,\n\t\t\t * and therefore the original $value will be returned.\n\t\t\t */\n\t\t\truleValue = getTypographyFontSizeValue(\n\t\t\t\t{ size: ruleValue },\n\t\t\t\ttree?.settings?.typography\n\t\t\t);\n\t\t}\n\n\t\toutput.push( `${ cssProperty }: ${ ruleValue }` );\n\t} );\n\n\treturn output;\n}\n\n/**\n * Get generated CSS for layout styles by looking up layout definitions provided\n * in theme.json, and outputting common layout styles, and specific blockGap values.\n *\n * @param {Object}  props\n * @param {Object}  props.tree                  A theme.json tree containing layout definitions.\n * @param {Object}  props.style                 A style object containing spacing values.\n * @param {string}  props.selector              Selector used to group together layout styling rules.\n * @param {boolean} props.hasBlockGapSupport    Whether or not the theme opts-in to blockGap support.\n * @param {boolean} props.hasFallbackGapSupport Whether or not the theme allows fallback gap styles.\n * @param {?string} props.fallbackGapValue      An optional fallback gap value if no real gap value is available.\n * @return {string} Generated CSS rules for the layout styles.\n */\nexport function getLayoutStyles( {\n\ttree,\n\tstyle,\n\tselector,\n\thasBlockGapSupport,\n\thasFallbackGapSupport,\n\tfallbackGapValue,\n} ) {\n\tlet ruleset = '';\n\tlet gapValue = hasBlockGapSupport\n\t\t? getGapCSSValue( style?.spacing?.blockGap )\n\t\t: '';\n\n\t// Ensure a fallback gap value for the root layout definitions,\n\t// and use a fallback value if one is provided for the current block.\n\tif ( hasFallbackGapSupport ) {\n\t\tif ( selector === ROOT_BLOCK_SELECTOR ) {\n\t\t\tgapValue = ! gapValue ? '0.5em' : gapValue;\n\t\t} else if ( ! hasBlockGapSupport && fallbackGapValue ) {\n\t\t\tgapValue = fallbackGapValue;\n\t\t}\n\t}\n\n\tif ( gapValue && tree?.settings?.layout?.definitions ) {\n\t\tObject.values( tree.settings.layout.definitions ).forEach(\n\t\t\t( { className, name, spacingStyles } ) => {\n\t\t\t\t// Allow outputting fallback gap styles for flex layout type when block gap support isn't available.\n\t\t\t\tif ( ! hasBlockGapSupport && 'flex' !== name ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( spacingStyles?.length ) {\n\t\t\t\t\tspacingStyles.forEach( ( spacingStyle ) => {\n\t\t\t\t\t\tconst declarations = [];\n\n\t\t\t\t\t\tif ( spacingStyle.rules ) {\n\t\t\t\t\t\t\tObject.entries( spacingStyle.rules ).forEach(\n\t\t\t\t\t\t\t\t( [ cssProperty, cssValue ] ) => {\n\t\t\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t\t\t`${ cssProperty }: ${\n\t\t\t\t\t\t\t\t\t\t\tcssValue ? cssValue : gapValue\n\t\t\t\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\tlet combinedSelector = '';\n\n\t\t\t\t\t\t\tif ( ! hasBlockGapSupport ) {\n\t\t\t\t\t\t\t\t// For fallback gap styles, use lower specificity, to ensure styles do not unintentionally override theme styles.\n\t\t\t\t\t\t\t\tcombinedSelector =\n\t\t\t\t\t\t\t\t\tselector === ROOT_BLOCK_SELECTOR\n\t\t\t\t\t\t\t\t\t\t? `:where(.${ className }${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  })`\n\t\t\t\t\t\t\t\t\t\t: `:where(${ selector }.${ className }${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  })`;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcombinedSelector =\n\t\t\t\t\t\t\t\t\tselector === ROOT_BLOCK_SELECTOR\n\t\t\t\t\t\t\t\t\t\t? `:where(${ selector } .${ className })${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  }`\n\t\t\t\t\t\t\t\t\t\t: `${ selector }-${ className }${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  }`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\truleset += `${ combinedSelector } { ${ declarations.join(\n\t\t\t\t\t\t\t\t'; '\n\t\t\t\t\t\t\t) }; }`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t// For backwards compatibility, ensure the legacy block gap CSS variable is still available.\n\t\tif ( selector === ROOT_BLOCK_SELECTOR && hasBlockGapSupport ) {\n\t\t\truleset += `${ selector } { --wp--style--block-gap: ${ gapValue }; }`;\n\t\t}\n\t}\n\n\t// Output base styles\n\tif (\n\t\tselector === ROOT_BLOCK_SELECTOR &&\n\t\ttree?.settings?.layout?.definitions\n\t) {\n\t\tconst validDisplayModes = [ 'block', 'flex', 'grid' ];\n\t\tObject.values( tree.settings.layout.definitions ).forEach(\n\t\t\t( { className, displayMode, baseStyles } ) => {\n\t\t\t\tif (\n\t\t\t\t\tdisplayMode &&\n\t\t\t\t\tvalidDisplayModes.includes( displayMode )\n\t\t\t\t) {\n\t\t\t\t\truleset += `${ selector } .${ className } { display:${ displayMode }; }`;\n\t\t\t\t}\n\n\t\t\t\tif ( baseStyles?.length ) {\n\t\t\t\t\tbaseStyles.forEach( ( baseStyle ) => {\n\t\t\t\t\t\tconst declarations = [];\n\n\t\t\t\t\t\tif ( baseStyle.rules ) {\n\t\t\t\t\t\t\tObject.entries( baseStyle.rules ).forEach(\n\t\t\t\t\t\t\t\t( [ cssProperty, cssValue ] ) => {\n\t\t\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t\t\t`${ cssProperty }: ${ cssValue }`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\tconst combinedSelector = `${ selector } .${ className }${\n\t\t\t\t\t\t\t\tbaseStyle?.selector || ''\n\t\t\t\t\t\t\t}`;\n\t\t\t\t\t\t\truleset += `${ combinedSelector } { ${ declarations.join(\n\t\t\t\t\t\t\t\t'; '\n\t\t\t\t\t\t\t) }; }`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\treturn ruleset;\n}\n\nexport const getNodesWithStyles = ( tree, blockSelectors ) => {\n\tconst nodes = [];\n\n\tif ( ! tree?.styles ) {\n\t\treturn nodes;\n\t}\n\n\tconst pickStyleKeys = ( treeToPickFrom ) =>\n\t\tObject.fromEntries(\n\t\t\tObject.entries( treeToPickFrom ?? {} ).filter( ( [ key ] ) =>\n\t\t\t\t[\n\t\t\t\t\t'border',\n\t\t\t\t\t'color',\n\t\t\t\t\t'dimensions',\n\t\t\t\t\t'spacing',\n\t\t\t\t\t'typography',\n\t\t\t\t\t'filter',\n\t\t\t\t\t'outline',\n\t\t\t\t\t'shadow',\n\t\t\t\t].includes( key )\n\t\t\t)\n\t\t);\n\n\t// Top-level.\n\tconst styles = pickStyleKeys( tree.styles );\n\tif ( !! styles ) {\n\t\tnodes.push( {\n\t\t\tstyles,\n\t\t\tselector: ROOT_BLOCK_SELECTOR,\n\t\t} );\n\t}\n\n\tObject.entries( ELEMENTS ).forEach( ( [ name, selector ] ) => {\n\t\tif ( !! tree.styles?.elements?.[ name ] ) {\n\t\t\tnodes.push( {\n\t\t\t\tstyles: tree.styles?.elements?.[ name ],\n\t\t\t\tselector,\n\t\t\t} );\n\t\t}\n\t} );\n\n\t// Iterate over blocks: they can have styles & elements.\n\tObject.entries( tree.styles?.blocks ?? {} ).forEach(\n\t\t( [ blockName, node ] ) => {\n\t\t\tconst blockStyles = pickStyleKeys( node );\n\n\t\t\tif ( node?.variations ) {\n\t\t\t\tconst variations = {};\n\t\t\t\tObject.keys( node.variations ).forEach( ( variation ) => {\n\t\t\t\t\tvariations[ variation ] = pickStyleKeys(\n\t\t\t\t\t\tnode.variations[ variation ]\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t\tblockStyles.variations = variations;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!! blockStyles &&\n\t\t\t\t!! blockSelectors?.[ blockName ]?.selector\n\t\t\t) {\n\t\t\t\tnodes.push( {\n\t\t\t\t\tduotoneSelector:\n\t\t\t\t\t\tblockSelectors[ blockName ].duotoneSelector,\n\t\t\t\t\tfallbackGapValue:\n\t\t\t\t\t\tblockSelectors[ blockName ].fallbackGapValue,\n\t\t\t\t\thasLayoutSupport:\n\t\t\t\t\t\tblockSelectors[ blockName ].hasLayoutSupport,\n\t\t\t\t\tselector: blockSelectors[ blockName ]?.selector,\n\t\t\t\t\tstyles: blockStyles,\n\t\t\t\t\tfeatureSelectors:\n\t\t\t\t\t\tblockSelectors[ blockName ].featureSelectors,\n\t\t\t\t\tstyleVariationSelectors:\n\t\t\t\t\t\tblockSelectors[ blockName ].styleVariationSelectors,\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tObject.entries( node?.elements ?? {} ).forEach(\n\t\t\t\t( [ elementName, value ] ) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!! value &&\n\t\t\t\t\t\t!! blockSelectors?.[ blockName ] &&\n\t\t\t\t\t\t!! ELEMENTS?.[ elementName ]\n\t\t\t\t\t) {\n\t\t\t\t\t\tnodes.push( {\n\t\t\t\t\t\t\tstyles: value,\n\t\t\t\t\t\t\tselector: blockSelectors[ blockName ]?.selector\n\t\t\t\t\t\t\t\t.split( ',' )\n\t\t\t\t\t\t\t\t.map( ( sel ) => {\n\t\t\t\t\t\t\t\t\tconst elementSelectors =\n\t\t\t\t\t\t\t\t\t\tELEMENTS[ elementName ].split( ',' );\n\t\t\t\t\t\t\t\t\treturn elementSelectors.map(\n\t\t\t\t\t\t\t\t\t\t( elementSelector ) =>\n\t\t\t\t\t\t\t\t\t\t\tsel + ' ' + elementSelector\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.join( ',' ),\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t);\n\n\treturn nodes;\n};\n\nexport const getNodesWithSettings = ( tree, blockSelectors ) => {\n\tconst nodes = [];\n\n\tif ( ! tree?.settings ) {\n\t\treturn nodes;\n\t}\n\n\tconst pickPresets = ( treeToPickFrom ) => {\n\t\tconst presets = {};\n\t\tPRESET_METADATA.forEach( ( { path } ) => {\n\t\t\tconst value = get( treeToPickFrom, path, false );\n\t\t\tif ( value !== false ) {\n\t\t\t\tset( presets, path, value );\n\t\t\t}\n\t\t} );\n\t\treturn presets;\n\t};\n\n\t// Top-level.\n\tconst presets = pickPresets( tree.settings );\n\tconst custom = tree.settings?.custom;\n\tif ( ! isEmpty( presets ) || !! custom ) {\n\t\tnodes.push( {\n\t\t\tpresets,\n\t\t\tcustom,\n\t\t\tselector: ROOT_BLOCK_SELECTOR,\n\t\t} );\n\t}\n\n\t// Blocks.\n\tObject.entries( tree.settings?.blocks ?? {} ).forEach(\n\t\t( [ blockName, node ] ) => {\n\t\t\tconst blockPresets = pickPresets( node );\n\t\t\tconst blockCustom = node.custom;\n\t\t\tif ( ! isEmpty( blockPresets ) || !! blockCustom ) {\n\t\t\t\tnodes.push( {\n\t\t\t\t\tpresets: blockPresets,\n\t\t\t\t\tcustom: blockCustom,\n\t\t\t\t\tselector: blockSelectors[ blockName ]?.selector,\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t);\n\n\treturn nodes;\n};\n\nexport const toCustomProperties = ( tree, blockSelectors ) => {\n\tconst settings = getNodesWithSettings( tree, blockSelectors );\n\tlet ruleset = '';\n\tsettings.forEach( ( { presets, custom, selector } ) => {\n\t\tconst declarations = getPresetsDeclarations( presets, tree?.settings );\n\t\tconst customProps = flattenTree( custom, '--wp--custom--', '--' );\n\t\tif ( customProps.length > 0 ) {\n\t\t\tdeclarations.push( ...customProps );\n\t\t}\n\n\t\tif ( declarations.length > 0 ) {\n\t\t\truleset = ruleset + `${ selector }{${ declarations.join( ';' ) };}`;\n\t\t}\n\t} );\n\n\treturn ruleset;\n};\n\nexport const toStyles = (\n\ttree,\n\tblockSelectors,\n\thasBlockGapSupport,\n\thasFallbackGapSupport,\n\tdisableLayoutStyles = false\n) => {\n\tconst nodesWithStyles = getNodesWithStyles( tree, blockSelectors );\n\tconst nodesWithSettings = getNodesWithSettings( tree, blockSelectors );\n\tconst useRootPaddingAlign = tree?.settings?.useRootPaddingAwareAlignments;\n\tconst { contentSize, wideSize } = tree?.settings?.layout || {};\n\n\t/*\n\t * Reset default browser margin on the root body element.\n\t * This is set on the root selector **before** generating the ruleset\n\t * from the `theme.json`. This is to ensure that if the `theme.json` declares\n\t * `margin` in its `spacing` declaration for the `body` element then these\n\t * user-generated values take precedence in the CSS cascade.\n\t * @link https://github.com/WordPress/gutenberg/issues/36147.\n\t */\n\tlet ruleset = 'body {margin: 0;';\n\n\tif ( contentSize ) {\n\t\truleset += ` --wp--style--global--content-size: ${ contentSize };`;\n\t}\n\n\tif ( wideSize ) {\n\t\truleset += ` --wp--style--global--wide-size: ${ wideSize };`;\n\t}\n\n\tif ( useRootPaddingAlign ) {\n\t\t/*\n\t\t * These rules reproduce the ones from https://github.com/WordPress/gutenberg/blob/79103f124925d1f457f627e154f52a56228ed5ad/lib/class-wp-theme-json-gutenberg.php#L2508\n\t\t * almost exactly, but for the selectors that target block wrappers in the front end. This code only runs in the editor, so it doesn't need those selectors.\n\t\t */\n\t\truleset += `padding-right: 0; padding-left: 0; padding-top: var(--wp--style--root--padding-top); padding-bottom: var(--wp--style--root--padding-bottom) }\n\t\t\t.has-global-padding { padding-right: var(--wp--style--root--padding-right); padding-left: var(--wp--style--root--padding-left); }\n\t\t\t.has-global-padding :where(.has-global-padding) { padding-right: 0; padding-left: 0; }\n\t\t\t.has-global-padding > .alignfull { margin-right: calc(var(--wp--style--root--padding-right) * -1); margin-left: calc(var(--wp--style--root--padding-left) * -1); }\n\t\t\t.has-global-padding :where(.has-global-padding) > .alignfull { margin-right: 0; margin-left: 0; }\n\t\t\t.has-global-padding > .alignfull:where(:not(.has-global-padding)) > :where(.wp-block:not(.alignfull),p,h1,h2,h3,h4,h5,h6,ul,ol) { padding-right: var(--wp--style--root--padding-right); padding-left: var(--wp--style--root--padding-left); }\n\t\t\t.has-global-padding :where(.has-global-padding) > .alignfull:where(:not(.has-global-padding)) > :where(.wp-block:not(.alignfull),p,h1,h2,h3,h4,h5,h6,ul,ol) { padding-right: 0; padding-left: 0;`;\n\t}\n\n\truleset += '}';\n\n\tnodesWithStyles.forEach(\n\t\t( {\n\t\t\tselector,\n\t\t\tduotoneSelector,\n\t\t\tstyles,\n\t\t\tfallbackGapValue,\n\t\t\thasLayoutSupport,\n\t\t\tfeatureSelectors,\n\t\t\tstyleVariationSelectors,\n\t\t} ) => {\n\t\t\t// Process styles for block support features with custom feature level\n\t\t\t// CSS selectors set.\n\t\t\tif ( featureSelectors ) {\n\t\t\t\tconst featureDeclarations = getFeatureDeclarations(\n\t\t\t\t\tfeatureSelectors,\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t\tObject.entries( featureDeclarations ).forEach(\n\t\t\t\t\t( [ cssSelector, declarations ] ) => {\n\t\t\t\t\t\tif ( !! declarations.length ) {\n\t\t\t\t\t\t\tconst rules = declarations.join( ';' );\n\t\t\t\t\t\t\truleset = ruleset + `${ cssSelector }{${ rules }}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( styleVariationSelectors ) {\n\t\t\t\tObject.entries( styleVariationSelectors ).forEach(\n\t\t\t\t\t( [ styleVariationName, styleVariationSelector ] ) => {\n\t\t\t\t\t\tif ( styles?.variations?.[ styleVariationName ] ) {\n\t\t\t\t\t\t\t// If the block uses any custom selectors for block support, add those first.\n\t\t\t\t\t\t\tif ( featureSelectors ) {\n\t\t\t\t\t\t\t\tconst featureDeclarations =\n\t\t\t\t\t\t\t\t\tgetFeatureDeclarations(\n\t\t\t\t\t\t\t\t\t\tfeatureSelectors,\n\t\t\t\t\t\t\t\t\t\tstyles?.variations?.[\n\t\t\t\t\t\t\t\t\t\t\tstyleVariationName\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tObject.entries( featureDeclarations ).forEach(\n\t\t\t\t\t\t\t\t\t( [ baseSelector, declarations ] ) => {\n\t\t\t\t\t\t\t\t\t\tif ( !! declarations.length ) {\n\t\t\t\t\t\t\t\t\t\t\tconst cssSelector =\n\t\t\t\t\t\t\t\t\t\t\t\tconcatFeatureVariationSelectorString(\n\t\t\t\t\t\t\t\t\t\t\t\t\tbaseSelector,\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyleVariationSelector\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tconst rules =\n\t\t\t\t\t\t\t\t\t\t\t\tdeclarations.join( ';' );\n\t\t\t\t\t\t\t\t\t\t\truleset =\n\t\t\t\t\t\t\t\t\t\t\t\truleset +\n\t\t\t\t\t\t\t\t\t\t\t\t`${ cssSelector }{${ rules }}`;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Otherwise add regular selectors.\n\t\t\t\t\t\t\tconst styleVariationDeclarations =\n\t\t\t\t\t\t\t\tgetStylesDeclarations(\n\t\t\t\t\t\t\t\t\tstyles?.variations?.[ styleVariationName ],\n\t\t\t\t\t\t\t\t\tstyleVariationSelector,\n\t\t\t\t\t\t\t\t\tuseRootPaddingAlign,\n\t\t\t\t\t\t\t\t\ttree\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif ( !! styleVariationDeclarations.length ) {\n\t\t\t\t\t\t\t\truleset =\n\t\t\t\t\t\t\t\t\truleset +\n\t\t\t\t\t\t\t\t\t`${ styleVariationSelector }{${ styleVariationDeclarations.join(\n\t\t\t\t\t\t\t\t\t\t';'\n\t\t\t\t\t\t\t\t\t) }}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst duotoneStyles = {};\n\t\t\tif ( styles?.filter ) {\n\t\t\t\tduotoneStyles.filter = styles.filter;\n\t\t\t\tdelete styles.filter;\n\t\t\t}\n\n\t\t\t// Process duotone styles.\n\t\t\tif ( duotoneSelector ) {\n\t\t\t\tconst duotoneDeclarations =\n\t\t\t\t\tgetStylesDeclarations( duotoneStyles );\n\t\t\t\tif ( duotoneDeclarations.length > 0 ) {\n\t\t\t\t\truleset =\n\t\t\t\t\t\truleset +\n\t\t\t\t\t\t`${ duotoneSelector }{${ duotoneDeclarations.join(\n\t\t\t\t\t\t\t';'\n\t\t\t\t\t\t) };}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Process blockGap and layout styles.\n\t\t\tif (\n\t\t\t\t! disableLayoutStyles &&\n\t\t\t\t( ROOT_BLOCK_SELECTOR === selector || hasLayoutSupport )\n\t\t\t) {\n\t\t\t\truleset += getLayoutStyles( {\n\t\t\t\t\ttree,\n\t\t\t\t\tstyle: styles,\n\t\t\t\t\tselector,\n\t\t\t\t\thasBlockGapSupport,\n\t\t\t\t\thasFallbackGapSupport,\n\t\t\t\t\tfallbackGapValue,\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Process the remaining block styles (they use either normal block class or __experimentalSelector).\n\t\t\tconst declarations = getStylesDeclarations(\n\t\t\t\tstyles,\n\t\t\t\tselector,\n\t\t\t\tuseRootPaddingAlign,\n\t\t\t\ttree\n\t\t\t);\n\t\t\tif ( declarations?.length ) {\n\t\t\t\truleset =\n\t\t\t\t\truleset + `${ selector }{${ declarations.join( ';' ) };}`;\n\t\t\t}\n\n\t\t\t// Check for pseudo selector in `styles` and handle separately.\n\t\t\tconst pseudoSelectorStyles = Object.entries( styles ).filter(\n\t\t\t\t( [ key ] ) => key.startsWith( ':' )\n\t\t\t);\n\n\t\t\tif ( pseudoSelectorStyles?.length ) {\n\t\t\t\tpseudoSelectorStyles.forEach(\n\t\t\t\t\t( [ pseudoKey, pseudoStyle ] ) => {\n\t\t\t\t\t\tconst pseudoDeclarations =\n\t\t\t\t\t\t\tgetStylesDeclarations( pseudoStyle );\n\n\t\t\t\t\t\tif ( ! pseudoDeclarations?.length ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// `selector` maybe provided in a form\n\t\t\t\t\t\t// where block level selectors have sub element\n\t\t\t\t\t\t// selectors appended to them as a comma separated\n\t\t\t\t\t\t// string.\n\t\t\t\t\t\t// e.g. `h1 a,h2 a,h3 a,h4 a,h5 a,h6 a`;\n\t\t\t\t\t\t// Split and append pseudo selector to create\n\t\t\t\t\t\t// the proper rules to target the elements.\n\t\t\t\t\t\tconst _selector = selector\n\t\t\t\t\t\t\t.split( ',' )\n\t\t\t\t\t\t\t.map( ( sel ) => sel + pseudoKey )\n\t\t\t\t\t\t\t.join( ',' );\n\n\t\t\t\t\t\tconst pseudoRule = `${ _selector }{${ pseudoDeclarations.join(\n\t\t\t\t\t\t\t';'\n\t\t\t\t\t\t) };}`;\n\n\t\t\t\t\t\truleset = ruleset + pseudoRule;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t);\n\n\t/* Add alignment / layout styles */\n\truleset =\n\t\truleset +\n\t\t'.wp-site-blocks > .alignleft { float: left; margin-right: 2em; }';\n\truleset =\n\t\truleset +\n\t\t'.wp-site-blocks > .alignright { float: right; margin-left: 2em; }';\n\truleset =\n\t\truleset +\n\t\t'.wp-site-blocks > .aligncenter { justify-content: center; margin-left: auto; margin-right: auto; }';\n\n\tif ( hasBlockGapSupport ) {\n\t\t// Use fallback of `0.5em` just in case, however if there is blockGap support, there should nearly always be a real value.\n\t\tconst gapValue =\n\t\t\tgetGapCSSValue( tree?.styles?.spacing?.blockGap ) || '0.5em';\n\t\truleset =\n\t\t\truleset +\n\t\t\t`:where(.wp-site-blocks) > * { margin-block-start: ${ gapValue }; margin-block-end: 0; }`;\n\t\truleset =\n\t\t\truleset +\n\t\t\t':where(.wp-site-blocks) > :first-child:first-child { margin-block-start: 0; }';\n\t\truleset =\n\t\t\truleset +\n\t\t\t':where(.wp-site-blocks) > :last-child:last-child { margin-block-end: 0; }';\n\t}\n\n\tnodesWithSettings.forEach( ( { selector, presets } ) => {\n\t\tif ( ROOT_BLOCK_SELECTOR === selector ) {\n\t\t\t// Do not add extra specificity for top-level classes.\n\t\t\tselector = '';\n\t\t}\n\n\t\tconst classes = getPresetsClasses( selector, presets );\n\t\tif ( ! isEmpty( classes ) ) {\n\t\t\truleset = ruleset + classes;\n\t\t}\n\t} );\n\n\treturn ruleset;\n};\n\nexport function toSvgFilters( tree, blockSelectors ) {\n\tconst nodesWithSettings = getNodesWithSettings( tree, blockSelectors );\n\treturn nodesWithSettings.flatMap( ( { presets } ) => {\n\t\treturn getPresetsSvgFilters( presets );\n\t} );\n}\n\nconst getSelectorsConfig = ( blockType, rootSelector ) => {\n\tif ( ! isEmpty( blockType?.selectors ) ) {\n\t\treturn blockType.selectors;\n\t}\n\n\tconst config = { root: rootSelector };\n\tObject.entries( BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS ).forEach(\n\t\t( [ featureKey, featureName ] ) => {\n\t\t\tconst featureSelector = getBlockCSSSelector(\n\t\t\t\tblockType,\n\t\t\t\tfeatureKey\n\t\t\t);\n\n\t\t\tif ( featureSelector ) {\n\t\t\t\tconfig[ featureName ] = featureSelector;\n\t\t\t}\n\t\t}\n\t);\n\n\treturn config;\n};\n\nexport const getBlockSelectors = ( blockTypes, getBlockStyles ) => {\n\tconst result = {};\n\tblockTypes.forEach( ( blockType ) => {\n\t\tconst name = blockType.name;\n\t\tconst selector = getBlockCSSSelector( blockType );\n\t\tlet duotoneSelector = getBlockCSSSelector(\n\t\t\tblockType,\n\t\t\t'filter.duotone'\n\t\t);\n\n\t\t// Keep backwards compatibility for support.color.__experimentalDuotone.\n\t\tif ( ! duotoneSelector ) {\n\t\t\tconst rootSelector = getBlockCSSSelector( blockType );\n\t\t\tconst duotoneSupport = getBlockSupport(\n\t\t\t\tblockType,\n\t\t\t\t'color.__experimentalDuotone',\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tduotoneSelector =\n\t\t\t\tduotoneSupport && scopeSelector( rootSelector, duotoneSupport );\n\t\t}\n\n\t\tconst hasLayoutSupport = !! blockType?.supports?.__experimentalLayout;\n\t\tconst fallbackGapValue =\n\t\t\tblockType?.supports?.spacing?.blockGap?.__experimentalDefault;\n\n\t\tconst blockStyleVariations = getBlockStyles( name );\n\t\tconst styleVariationSelectors = {};\n\t\tif ( blockStyleVariations?.length ) {\n\t\t\tblockStyleVariations.forEach( ( variation ) => {\n\t\t\t\tconst styleVariationSelector = `.is-style-${ variation.name }${ selector }`;\n\t\t\t\tstyleVariationSelectors[ variation.name ] =\n\t\t\t\t\tstyleVariationSelector;\n\t\t\t} );\n\t\t}\n\t\t// For each block support feature add any custom selectors.\n\t\tconst featureSelectors = getSelectorsConfig( blockType, selector );\n\n\t\tresult[ name ] = {\n\t\t\tduotoneSelector,\n\t\t\tfallbackGapValue,\n\t\t\tfeatureSelectors: Object.keys( featureSelectors ).length\n\t\t\t\t? featureSelectors\n\t\t\t\t: undefined,\n\t\t\thasLayoutSupport,\n\t\t\tname,\n\t\t\tselector,\n\t\t\tstyleVariationSelectors: Object.keys( styleVariationSelectors )\n\t\t\t\t.length\n\t\t\t\t? styleVariationSelectors\n\t\t\t\t: undefined,\n\t\t};\n\t} );\n\n\treturn result;\n};\n\n/**\n * If there is a separator block whose color is defined in theme.json via background,\n * update the separator color to the same value by using border color.\n *\n * @param {Object} config Theme.json configuration file object.\n * @return {Object} configTheme.json configuration file object updated.\n */\nfunction updateConfigWithSeparator( config ) {\n\tconst needsSeparatorStyleUpdate =\n\t\tconfig.styles?.blocks?.[ 'core/separator' ] &&\n\t\tconfig.styles?.blocks?.[ 'core/separator' ].color?.background &&\n\t\t! config.styles?.blocks?.[ 'core/separator' ].color?.text &&\n\t\t! config.styles?.blocks?.[ 'core/separator' ].border?.color;\n\tif ( needsSeparatorStyleUpdate ) {\n\t\treturn {\n\t\t\t...config,\n\t\t\tstyles: {\n\t\t\t\t...config.styles,\n\t\t\t\tblocks: {\n\t\t\t\t\t...config.styles.blocks,\n\t\t\t\t\t'core/separator': {\n\t\t\t\t\t\t...config.styles.blocks[ 'core/separator' ],\n\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t...config.styles.blocks[ 'core/separator' ].color,\n\t\t\t\t\t\t\ttext: config.styles?.blocks[ 'core/separator' ]\n\t\t\t\t\t\t\t\t.color.background,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\treturn config;\n}\n\nconst processCSSNesting = ( css, blockSelector ) => {\n\tlet processedCSS = '';\n\n\t// Split CSS nested rules.\n\tconst parts = css.split( '&' );\n\tparts.forEach( ( part ) => {\n\t\tprocessedCSS += ! part.includes( '{' )\n\t\t\t? blockSelector + '{' + part + '}' // If the part doesn't contain braces, it applies to the root level.\n\t\t\t: blockSelector + part; // Prepend the selector, which effectively replaces the \"&\" character.\n\t} );\n\treturn processedCSS;\n};\n\nexport function useGlobalStylesOutput() {\n\tlet { merged: mergedConfig } = useContext( GlobalStylesContext );\n\n\tconst [ blockGap ] = useGlobalSetting( 'spacing.blockGap' );\n\tconst hasBlockGapSupport = blockGap !== null;\n\tconst hasFallbackGapSupport = ! hasBlockGapSupport; // This setting isn't useful yet: it exists as a placeholder for a future explicit fallback styles support.\n\tconst disableLayoutStyles = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn !! getSettings().disableLayoutStyles;\n\t} );\n\n\tconst getBlockStyles = useSelect( ( select ) => {\n\t\treturn select( blocksStore ).getBlockStyles;\n\t}, [] );\n\n\treturn useMemo( () => {\n\t\tif ( ! mergedConfig?.styles || ! mergedConfig?.settings ) {\n\t\t\treturn [];\n\t\t}\n\t\tmergedConfig = updateConfigWithSeparator( mergedConfig );\n\n\t\tconst blockSelectors = getBlockSelectors(\n\t\t\tgetBlockTypes(),\n\t\t\tgetBlockStyles\n\t\t);\n\n\t\tconst customProperties = toCustomProperties(\n\t\t\tmergedConfig,\n\t\t\tblockSelectors\n\t\t);\n\t\tconst globalStyles = toStyles(\n\t\t\tmergedConfig,\n\t\t\tblockSelectors,\n\t\t\thasBlockGapSupport,\n\t\t\thasFallbackGapSupport,\n\t\t\tdisableLayoutStyles\n\t\t);\n\t\tconst svgs = toSvgFilters( mergedConfig, blockSelectors );\n\n\t\tconst styles = [\n\t\t\t{\n\t\t\t\tcss: customProperties,\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcss: globalStyles,\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t\t// Load custom CSS in own stylesheet so that any invalid CSS entered in the input won't break all the global styles in the editor.\n\t\t\t{\n\t\t\t\tcss: mergedConfig.styles.css ?? '',\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tassets: svgs,\n\t\t\t\t__unstableType: 'svg',\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t];\n\n\t\t// Loop through the blocks to check if there are custom CSS values.\n\t\t// If there are, get the block selector and push the selector together with\n\t\t// the CSS value to the 'stylesheets' array.\n\t\tgetBlockTypes().forEach( ( blockType ) => {\n\t\t\tif ( mergedConfig.styles.blocks[ blockType.name ]?.css ) {\n\t\t\t\tconst selector = blockSelectors[ blockType.name ].selector;\n\t\t\t\tstyles.push( {\n\t\t\t\t\tcss: processCSSNesting(\n\t\t\t\t\t\tmergedConfig.styles.blocks[ blockType.name ]?.css,\n\t\t\t\t\t\tselector\n\t\t\t\t\t),\n\t\t\t\t\tisGlobalStyles: true,\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\treturn [ styles, mergedConfig.settings ];\n\t}, [\n\t\thasBlockGapSupport,\n\t\thasFallbackGapSupport,\n\t\tmergedConfig,\n\t\tdisableLayoutStyles,\n\t] );\n}\n"]}