/** @typedef {import('./types').RichTextValue} RichTextValue */
/**
 * Create an HTML string from a Rich Text value. If a `multilineTag` is
 * provided, text separated by a line separator will be wrapped in it.
 *
 * @param {Object}        $1                      Named argements.
 * @param {RichTextValue} $1.value                Rich text value.
 * @param {string}        [$1.multilineTag]       Multiline tag.
 * @param {boolean}       [$1.preserveWhiteSpace] Whether or not to use newline
 *                                                characters for line breaks.
 *
 * @return {string} HTML string.
 */
export function toHTMLString({ value, multilineTag, preserveWhiteSpace }: {
    value: RichTextValue;
    multilineTag?: string | undefined;
    preserveWhiteSpace?: boolean | undefined;
}): string;
export type RichTextValue = import('./types').RichTextValue;
//# sourceMappingURL=to-html-string.d.ts.map