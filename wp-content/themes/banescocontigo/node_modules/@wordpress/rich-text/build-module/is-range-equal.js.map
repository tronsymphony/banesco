{"version":3,"sources":["@wordpress/rich-text/src/is-range-equal.js"],"names":["isRangeEqual","a","b","startContainer","startOffset","endContainer","endOffset"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,YAAT,CAAuBC,CAAvB,EAA0BC,CAA1B,EAA8B;AACpC,SACCD,CAAC,KAAKC,CAAN,IACED,CAAC,IACFC,CADC,IAEDD,CAAC,CAACE,cAAF,KAAqBD,CAAC,CAACC,cAFtB,IAGDF,CAAC,CAACG,WAAF,KAAkBF,CAAC,CAACE,WAHnB,IAIDH,CAAC,CAACI,YAAF,KAAmBH,CAAC,CAACG,YAJpB,IAKDJ,CAAC,CAACK,SAAF,KAAgBJ,CAAC,CAACI,SAPpB;AASA","sourcesContent":["/**\n * Returns true if two ranges are equal, or false otherwise. Ranges are\n * considered equal if their start and end occur in the same container and\n * offset.\n *\n * @param {Range|null} a First range object to test.\n * @param {Range|null} b First range object to test.\n *\n * @return {boolean} Whether the two ranges are equal.\n */\nexport function isRangeEqual( a, b ) {\n\treturn (\n\t\ta === b ||\n\t\t( a &&\n\t\t\tb &&\n\t\t\ta.startContainer === b.startContainer &&\n\t\t\ta.startOffset === b.startOffset &&\n\t\t\ta.endContainer === b.endContainer &&\n\t\t\ta.endOffset === b.endOffset )\n\t);\n}\n"]}