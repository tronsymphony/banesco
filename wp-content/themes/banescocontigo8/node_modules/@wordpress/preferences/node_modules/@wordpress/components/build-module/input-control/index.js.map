{"version":3,"sources":["@wordpress/components/src/input-control/index.tsx"],"names":["classNames","useInstanceId","useState","forwardRef","InputBase","InputField","space","useDraft","BaseControl","noop","useUniqueId","idProp","instanceId","InputControl","id","UnforwardedInputControl","__next36pxDefaultSize","__unstableStateReducer","stateReducer","state","__unstableInputWidth","className","disabled","help","hideLabelFromVision","isPressEnterToChange","label","labelPosition","onChange","onValidate","onKeyDown","prefix","size","style","suffix","value","props","ref","isFocused","setIsFocused","classes","draftHookProps","onBlur","helpPropName","helpProp","undefined"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classNames from 'classnames';\nimport type { ForwardedRef } from 'react';\n\n/**\n * WordPress dependencies\n */\nimport { useInstanceId } from '@wordpress/compose';\nimport { useState, forwardRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport InputBase from './input-base';\nimport InputField from './input-field';\nimport type { InputControlProps } from './types';\nimport { space } from '../ui/utils/space';\nimport { useDraft } from './utils';\nimport BaseControl from '../base-control';\n\nconst noop = () => {};\n\nfunction useUniqueId( idProp?: string ) {\n\tconst instanceId = useInstanceId( InputControl );\n\tconst id = `inspector-input-control-${ instanceId }`;\n\n\treturn idProp || id;\n}\n\nexport function UnforwardedInputControl(\n\t{\n\t\t__next36pxDefaultSize,\n\t\t__unstableStateReducer: stateReducer = ( state ) => state,\n\t\t__unstableInputWidth,\n\t\tclassName,\n\t\tdisabled = false,\n\t\thelp,\n\t\thideLabelFromVision = false,\n\t\tid: idProp,\n\t\tisPressEnterToChange = false,\n\t\tlabel,\n\t\tlabelPosition = 'top',\n\t\tonChange = noop,\n\t\tonValidate = noop,\n\t\tonKeyDown = noop,\n\t\tprefix,\n\t\tsize = 'default',\n\t\tstyle,\n\t\tsuffix,\n\t\tvalue,\n\t\t...props\n\t}: InputControlProps,\n\tref: ForwardedRef< HTMLInputElement >\n) {\n\tconst [ isFocused, setIsFocused ] = useState( false );\n\n\tconst id = useUniqueId( idProp );\n\tconst classes = classNames( 'components-input-control', className );\n\n\tconst draftHookProps = useDraft( {\n\t\tvalue,\n\t\tonBlur: props.onBlur,\n\t\tonChange,\n\t} );\n\n\t// ARIA descriptions can only contain plain text, so fall back to aria-details if not.\n\tconst helpPropName =\n\t\ttypeof help === 'string' ? 'aria-describedby' : 'aria-details';\n\tconst helpProp = !! help ? { [ helpPropName ]: `${ id }__help` } : {};\n\n\treturn (\n\t\t<BaseControl\n\t\t\tclassName={ classes }\n\t\t\thelp={ help }\n\t\t\tid={ id }\n\t\t\t__nextHasNoMarginBottom\n\t\t>\n\t\t\t<InputBase\n\t\t\t\t__next36pxDefaultSize={ __next36pxDefaultSize }\n\t\t\t\t__unstableInputWidth={ __unstableInputWidth }\n\t\t\t\tdisabled={ disabled }\n\t\t\t\tgap={ 3 }\n\t\t\t\thideLabelFromVision={ hideLabelFromVision }\n\t\t\t\tid={ id }\n\t\t\t\tisFocused={ isFocused }\n\t\t\t\tjustify=\"left\"\n\t\t\t\tlabel={ label }\n\t\t\t\tlabelPosition={ labelPosition }\n\t\t\t\tprefix={ prefix }\n\t\t\t\tsize={ size }\n\t\t\t\tstyle={ style }\n\t\t\t\tsuffix={ suffix }\n\t\t\t>\n\t\t\t\t<InputField\n\t\t\t\t\t{ ...props }\n\t\t\t\t\t{ ...helpProp }\n\t\t\t\t\t__next36pxDefaultSize={ __next36pxDefaultSize }\n\t\t\t\t\tclassName=\"components-input-control__input\"\n\t\t\t\t\tdisabled={ disabled }\n\t\t\t\t\tid={ id }\n\t\t\t\t\tisFocused={ isFocused }\n\t\t\t\t\tisPressEnterToChange={ isPressEnterToChange }\n\t\t\t\t\tonKeyDown={ onKeyDown }\n\t\t\t\t\tonValidate={ onValidate }\n\t\t\t\t\tpaddingInlineStart={ prefix ? space( 2 ) : undefined }\n\t\t\t\t\tpaddingInlineEnd={ suffix ? space( 2 ) : undefined }\n\t\t\t\t\tref={ ref }\n\t\t\t\t\tsetIsFocused={ setIsFocused }\n\t\t\t\t\tsize={ size }\n\t\t\t\t\tstateReducer={ stateReducer }\n\t\t\t\t\t{ ...draftHookProps }\n\t\t\t\t/>\n\t\t\t</InputBase>\n\t\t</BaseControl>\n\t);\n}\n\n/**\n * InputControl components let users enter and edit text. This is an experimental component\n * intended to (in time) merge with or replace `TextControl`.\n *\n * ```jsx\n * import { __experimentalInputControl as InputControl } from '@wordpress/components';\n * import { useState } from '@wordpress/compose';\n *\n * const Example = () => {\n *   const [ value, setValue ] = useState( '' );\n *\n *   return (\n *  \t<InputControl\n *  \t\tvalue={ value }\n *  \t\tonChange={ ( nextValue ) => setValue( nextValue ?? '' ) }\n *  \t/>\n *   );\n * };\n * ```\n */\nexport const InputControl = forwardRef( UnforwardedInputControl );\n\nexport default InputControl;\n"]}