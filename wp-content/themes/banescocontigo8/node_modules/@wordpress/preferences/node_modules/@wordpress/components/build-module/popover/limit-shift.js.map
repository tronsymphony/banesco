{"version":3,"sources":["@wordpress/components/src/popover/limit-shift.ts"],"names":["getSide","placement","split","getMainAxisFromPlacement","includes","getCrossAxis","axis","limitShift","options","fn","middlewareArguments","x","y","rects","middlewareData","offset","mainAxis","checkMainAxis","crossAxis","checkCrossAxis","coords","mainAxisCoord","crossAxisCoord","rawOffset","computedOffset","additionalFrameOffset","frameOffset","amount","len","limitMin","reference","floating","limitMax","isOriginSide"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport type {\n\tAxis,\n\tCoords,\n\tPlacement,\n\tSide,\n\tMiddlewareArguments,\n} from '@floating-ui/react-dom';\n\n/**\n * Parts of this source were derived and modified from `floating-ui`,\n * released under the MIT license.\n *\n * https://github.com/floating-ui/floating-ui\n *\n * Copyright (c) 2021 Floating UI contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Custom limiter function for the `shift` middleware.\n * This function is mostly identical default `limitShift` from ``@floating-ui`;\n * the only difference is that, when computing the min/max shift limits, it\n * also takes into account the iframe offset that is added by the\n * custom \"frameOffset\" middleware.\n *\n * All unexported types and functions are also from the `@floating-ui` library,\n * and have been copied to this file for convenience.\n */\n\ntype LimitShiftOffset =\n\t| ( ( args: MiddlewareArguments ) =>\n\t\t\t| number\n\t\t\t| {\n\t\t\t\t\t/**\n\t\t\t\t\t * Offset the limiting of the axis that runs along the alignment of the\n\t\t\t\t\t * floating element.\n\t\t\t\t\t */\n\t\t\t\t\tmainAxis?: number;\n\t\t\t\t\t/**\n\t\t\t\t\t * Offset the limiting of the axis that runs along the side of the\n\t\t\t\t\t * floating element.\n\t\t\t\t\t */\n\t\t\t\t\tcrossAxis?: number;\n\t\t\t  } )\n\t| number\n\t| {\n\t\t\t/**\n\t\t\t * Offset the limiting of the axis that runs along the alignment of the\n\t\t\t * floating element.\n\t\t\t */\n\t\t\tmainAxis?: number;\n\t\t\t/**\n\t\t\t * Offset the limiting of the axis that runs along the side of the\n\t\t\t * floating element.\n\t\t\t */\n\t\t\tcrossAxis?: number;\n\t  };\n\ntype LimitShiftOptions = {\n\t/**\n\t * Offset when limiting starts. `0` will limit when the opposite edges of the\n\t * reference and floating elements are aligned.\n\t * - positive = start limiting earlier\n\t * - negative = start limiting later\n\t */\n\toffset: LimitShiftOffset;\n\t/**\n\t * Whether to limit the axis that runs along the alignment of the floating\n\t * element.\n\t */\n\tmainAxis: boolean;\n\t/**\n\t * Whether to limit the axis that runs along the side of the floating element.\n\t */\n\tcrossAxis: boolean;\n};\n\nfunction getSide( placement: Placement ): Side {\n\treturn placement.split( '-' )[ 0 ] as Side;\n}\n\nfunction getMainAxisFromPlacement( placement: Placement ): Axis {\n\treturn [ 'top', 'bottom' ].includes( getSide( placement ) ) ? 'x' : 'y';\n}\n\nfunction getCrossAxis( axis: Axis ): Axis {\n\treturn axis === 'x' ? 'y' : 'x';\n}\n\nexport const limitShift = (\n\toptions: Partial< LimitShiftOptions > = {}\n): {\n\toptions: Partial< LimitShiftOffset >;\n\tfn: ( middlewareArguments: MiddlewareArguments ) => Coords;\n} => ( {\n\toptions,\n\tfn( middlewareArguments ) {\n\t\tconst { x, y, placement, rects, middlewareData } = middlewareArguments;\n\t\tconst {\n\t\t\toffset = 0,\n\t\t\tmainAxis: checkMainAxis = true,\n\t\t\tcrossAxis: checkCrossAxis = true,\n\t\t} = options;\n\n\t\tconst coords = { x, y };\n\t\tconst mainAxis = getMainAxisFromPlacement( placement );\n\t\tconst crossAxis = getCrossAxis( mainAxis );\n\n\t\tlet mainAxisCoord = coords[ mainAxis ];\n\t\tlet crossAxisCoord = coords[ crossAxis ];\n\n\t\tconst rawOffset =\n\t\t\ttypeof offset === 'function'\n\t\t\t\t? offset( middlewareArguments )\n\t\t\t\t: offset;\n\t\tconst computedOffset =\n\t\t\ttypeof rawOffset === 'number'\n\t\t\t\t? { mainAxis: rawOffset, crossAxis: 0 }\n\t\t\t\t: { mainAxis: 0, crossAxis: 0, ...rawOffset };\n\n\t\t// At the moment of writing, this is the only difference\n\t\t// with the `limitShift` function from `@floating-ui`.\n\t\t// This offset needs to be added to all min/max limits\n\t\t// in order to make the shift-limiting work as expected.\n\t\tconst additionalFrameOffset = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\t...middlewareData.frameOffset?.amount,\n\t\t};\n\n\t\tif ( checkMainAxis ) {\n\t\t\tconst len = mainAxis === 'y' ? 'height' : 'width';\n\t\t\tconst limitMin =\n\t\t\t\trects.reference[ mainAxis ] -\n\t\t\t\trects.floating[ len ] +\n\t\t\t\tcomputedOffset.mainAxis +\n\t\t\t\tadditionalFrameOffset[ mainAxis ];\n\t\t\tconst limitMax =\n\t\t\t\trects.reference[ mainAxis ] +\n\t\t\t\trects.reference[ len ] -\n\t\t\t\tcomputedOffset.mainAxis +\n\t\t\t\tadditionalFrameOffset[ mainAxis ];\n\n\t\t\tif ( mainAxisCoord < limitMin ) {\n\t\t\t\tmainAxisCoord = limitMin;\n\t\t\t} else if ( mainAxisCoord > limitMax ) {\n\t\t\t\tmainAxisCoord = limitMax;\n\t\t\t}\n\t\t}\n\n\t\tif ( checkCrossAxis ) {\n\t\t\tconst len = mainAxis === 'y' ? 'width' : 'height';\n\t\t\tconst isOriginSide = [ 'top', 'left' ].includes(\n\t\t\t\tgetSide( placement )\n\t\t\t);\n\t\t\tconst limitMin =\n\t\t\t\trects.reference[ crossAxis ] -\n\t\t\t\trects.floating[ len ] +\n\t\t\t\t( isOriginSide\n\t\t\t\t\t? middlewareData.offset?.[ crossAxis ] ?? 0\n\t\t\t\t\t: 0 ) +\n\t\t\t\t( isOriginSide ? 0 : computedOffset.crossAxis ) +\n\t\t\t\tadditionalFrameOffset[ crossAxis ];\n\t\t\tconst limitMax =\n\t\t\t\trects.reference[ crossAxis ] +\n\t\t\t\trects.reference[ len ] +\n\t\t\t\t( isOriginSide\n\t\t\t\t\t? 0\n\t\t\t\t\t: middlewareData.offset?.[ crossAxis ] ?? 0 ) -\n\t\t\t\t( isOriginSide ? computedOffset.crossAxis : 0 ) +\n\t\t\t\tadditionalFrameOffset[ crossAxis ];\n\n\t\t\tif ( crossAxisCoord < limitMin ) {\n\t\t\t\tcrossAxisCoord = limitMin;\n\t\t\t} else if ( crossAxisCoord > limitMax ) {\n\t\t\t\tcrossAxisCoord = limitMax;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t[ mainAxis ]: mainAxisCoord,\n\t\t\t[ crossAxis ]: crossAxisCoord,\n\t\t} as Coords;\n\t},\n} );\n"]}