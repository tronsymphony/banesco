{"version":3,"sources":["@wordpress/components/src/toolbar/toolbar/index.tsx"],"names":["CONTEXT_SYSTEM_VALUE","DropdownMenu","variant","UnforwardedToolbar","className","label","props","ref","since","alternative","link","finalClassName","Toolbar"],"mappings":";;;;;;;;;AASA;;;;AANA;;AAOA;;AAKA;;AACA;;AAEA;;AAlBA;AACA;AACA;;AAIA;AACA;AACA;;AAIA;AACA;AACA;AASA;AACA;AACA;AACA;AACA,MAAMA,oBAAoB,GAAG;AAC5BC,EAAAA,YAAY,EAAE;AACb;AACA;AACAC,IAAAA,OAAO,EAAE;AAHI;AADc,CAA7B;;AAQA,SAASC,kBAAT,CACC;AACCC,EAAAA,SADD;AAECC,EAAAA,KAFD;AAGC,KAAGC;AAHJ,CADD,EAMCC,GAND,EAOE;AACD,MAAK,CAAEF,KAAP,EAAe;AACd,6BAAY,kCAAZ,EAAgD;AAC/CG,MAAAA,KAAK,EAAE,KADwC;AAE/CC,MAAAA,WAAW,EAAE,wBAFkC;AAG/CC,MAAAA,IAAI,EAAE;AAHyC,KAAhD;AAKA,WAAO,4BAAC,qBAAD,6BAAmBJ,KAAnB;AAA2B,MAAA,SAAS,EAAGF;AAAvC,OAAP;AACA,GARA,CASD;;;AACA,QAAMO,cAAc,GAAG,yBACtB,+BADsB,EAEtBP,SAFsB,CAAvB;AAIA,SACC,4BAAC,8BAAD;AAAuB,IAAA,KAAK,EAAGJ;AAA/B,KACC,4BAAC,yBAAD;AACC,IAAA,SAAS,EAAGW,cADb;AAEC,IAAA,KAAK,EAAGN,KAFT;AAGC,IAAA,GAAG,EAAGE;AAHP,KAIMD,KAJN,EADD,CADD;AAUA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,MAAMM,OAAO,GAAG,yBAAYT,kBAAZ,CAAhB;;eACQS,O","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport type { ForwardedRef } from 'react';\n\n/**\n * WordPress dependencies\n */\nimport { forwardRef } from '@wordpress/element';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport ToolbarGroup from '../toolbar-group';\nimport ToolbarContainer from './toolbar-container';\nimport type { ToolbarProps } from './types';\nimport {\n\tWordPressComponentProps,\n\tContextSystemProvider,\n} from '../../ui/context';\n\n// TODO:\n// - (optional) make the legacy `DropdownMenu` read the context variable\n// - swap the legacy `DropdownMenu` with the new version of the component\n//   once it's stable\nconst CONTEXT_SYSTEM_VALUE = {\n\tDropdownMenu: {\n\t\t// Note: the legacy `DropdownMenu` component is not yet reactive to this\n\t\t// context variant. See https://github.com/WordPress/gutenberg/pull/51097.\n\t\tvariant: 'toolbar',\n\t},\n};\n\nfunction UnforwardedToolbar(\n\t{\n\t\tclassName,\n\t\tlabel,\n\t\t...props\n\t}: WordPressComponentProps< ToolbarProps, 'div', false >,\n\tref: ForwardedRef< any >\n) {\n\tif ( ! label ) {\n\t\tdeprecated( 'Using Toolbar without label prop', {\n\t\t\tsince: '5.6',\n\t\t\talternative: 'ToolbarGroup component',\n\t\t\tlink: 'https://developer.wordpress.org/block-editor/components/toolbar/',\n\t\t} );\n\t\treturn <ToolbarGroup { ...props } className={ className } />;\n\t}\n\t// `ToolbarGroup` already uses components-toolbar for compatibility reasons.\n\tconst finalClassName = classnames(\n\t\t'components-accessible-toolbar',\n\t\tclassName\n\t);\n\treturn (\n\t\t<ContextSystemProvider value={ CONTEXT_SYSTEM_VALUE }>\n\t\t\t<ToolbarContainer\n\t\t\t\tclassName={ finalClassName }\n\t\t\t\tlabel={ label }\n\t\t\t\tref={ ref }\n\t\t\t\t{ ...props }\n\t\t\t/>\n\t\t</ContextSystemProvider>\n\t);\n}\n\n/**\n * Renders a toolbar.\n *\n * To add controls, simply pass `ToolbarButton` components as children.\n *\n * ```jsx\n * import { Toolbar, ToolbarButton } from '@wordpress/components';\n * import { formatBold, formatItalic, link } from '@wordpress/icons';\n *\n * function MyToolbar() {\n *   return (\n *     <Toolbar label=\"Options\">\n *       <ToolbarButton icon={ formatBold } label=\"Bold\" />\n *       <ToolbarButton icon={ formatItalic } label=\"Italic\" />\n *       <ToolbarButton icon={ link } label=\"Link\" />\n *     </Toolbar>\n *   );\n * }\n * ```\n */\nexport const Toolbar = forwardRef( UnforwardedToolbar );\nexport default Toolbar;\n"]}